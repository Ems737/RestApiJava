# Puerto de ejecucion
server.port=8080

#Usamos la url de jdbc y mem hace referencia a persistir en memoria y testdb es el nombre de la base de datos
spring.datasource.url=jdbc:h2:mem:testdb
#Este es el driver que tiene que cargar
spring.datasource.driverClassName=org.h2.Driver
#Usuario y password
spring.datasource.username=sa
spring.datasource.password=
#Le decimos particularmente a JPA que el sistema de gestión de base de datos que vamos a usar es h2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


#Habilitado por defecto en: http://localhost:8080/h2-console
spring.h2.console.enabled=true


# Valores: none, validate, update, create, create-drop <= default
# Lo que hace es ver el modelo mapeado (producto) y lo que hace es generar una tabla producto en el mundo relacional
# los valores de arriba funcionan para trabajar sobre la tabla
spring.jpa.hibernate.ddl-auto=update

#Habilita estadísticas
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate.stat=DEBUG
logging.level.org.hibernate.type=WARN 
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

logging.level.root=WARN
logging.level.ar.edu.iua.rest=ERROR
logging.level.ar.edu.iua.rest.ProductosRestController=DEBUG
logging.level.ar.edu.iua.BackendApplication=TRACE
